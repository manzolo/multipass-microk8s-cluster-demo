apiVersion: v1
kind: Namespace
metadata:
  name: mongodb
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: mongodb
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: cm9vdA== # root
  MONGO_INITDB_ROOT_PASSWORD: cGFzc3dvcmQ= # password
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app: mongodb
spec:
  clusterIP: None
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: mongodb
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      storageClassName: microk8s-hostpath
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
      # Se vuoi utilizzare Longhorn di nuovo, decommenta questa sezione e commenta la precedente.
      # storageClassName: longhorn
      # accessModes: ["ReadWriteOnce"]
      # resources:
      #   requests:
      #     storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-express
  namespace: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-express
  template:
    metadata:
      labels:
        app: mongodb-express
    spec:
      containers:
      - name: mongodb-express
        image: mongo-express:1.0.0-alpha.4
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: ME_CONFIG_MONGODB_SERVER
          value: mongodb
        ports:
        - containerPort: 8081
          name: http-web-svc
        resources:
          requests:
            cpu: "150m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-express
  namespace: mongodb
spec:
  type: NodePort
  selector:
    app: mongodb-express
  ports:
    - port: 8081
      targetPort: http-web-svc
      protocol: TCP
      nodePort: 31012
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongodb-express-ingress
  namespace: mongodb
spec:
  rules:
  - host: mongodb.loc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mongodb-express
            port:
              number: 8081